1 DISPLAY FIRST_NAME , JOB_ID , SALARY FOR THOSE WHO GETS HIGHER SALARY THAN ALL IT_PROG
SELECT FIRST_NAME , JOB_ID , SALARY FROM EMPLOYEES WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG');

2 DISPLAY FIRST_NAME , HIRE_DATE, DEPARTMENT_ID FOR THOSE WHO WERE HIRED BEFORE ALL EMPLOYEES OF DEPARTMENT 20
SELECT FIRST_NAME , HIRE_DATE , DEPARTMENT_ID FROM EMPLOYEES WHERE HIRE_DATE < (SELECT MIN(HIRE_DATE) FROM EMPLOYEES WHERE DEPARTMENT_ID = '20');

3 DISPLAY FIRST_NAME , SALARY , MANAGER_ID FOR THOSE WHO GETS LOWER SALARY THAN ALL EMPLOYEES WHO REPORTS TO 101
SELECT FIRST_NAME , SALARY , MANAGER_ID FROM EMPLOYEES WHERE SALARY < (SELECT MIN(SALARY) FROM EMPLOYEES WHERE MANAGER_ID = 101);

4 DISPLAY THOSE WHO GETS HIGHER SALARY THAN THE AVERAGE SALARY OF DEPARTMENT 80
SELECT FIRST_NAME , SALARY , DEPARTMENT_ID FROM EMPLOYEES WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 80);

5 DISPLAY THOSE WHO GETS LOWER SALARY THAN THE AVERAGE SALARY OF SA_REP
SELECT FIRST_NAME , SALARY , JOB_ID FROM EMPLOYEES WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'SA_REP');

6 DISPLAY THOSE WHO GETS LOWER SALARY THAN THOSE WHO WERE HIRED IN YEAR 94
SELECT FIRST_NAME , SALARY , HIRE_DATE FROM EMPLOYEES WHERE SALARY < (SELECT MIN(SALARY) FROM EMPLOYEES WHERE SUBSTR(HIRE_DATE,-2,2) = 94);

7 DISPLAY THOSE WHO GETS HIGHER SALARY THAN ALL WHO GETS COMMISSION
SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL);

8 DISPLAY OTHER THAN THOSE WHO GETS SALARY IN GRADE LEVEL B AND D
SELECT * FROM EMPLOYEES WHERE
SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'B') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'B') OR 
SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D');

9 DISPLAY THOSE WHO GETS SALARY LOWER THAN ALL WHO WERE HIRED UNTIL YEAR 95
SELECT FIRST_NAME , SALARY , HIRE_DATE FROM EMPLOYEES WHERE SALARY < (SELECT MIN(SALARY) FROM EMPLOYEES WHERE SUBSTR(HIRE_DATE,-2,2) = 95);

10 DISPLAY THOSE WHO GETS SALARY IN THE RANGE DECIDED FOR Sales Representative JOB_TITLE
SELECT FIRST_NAME , SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_TITLE = 'Sales Representative') AND (SELECT MAX_SALARY FROM JOBS WHERE JOB_TITLE = 'Sales Representative');

11 DISPLAY FIRST_NAME FOR THOSE WHO WORKS IN Shiping DEPARTMENT OR WHO GOES TO Seattle CITY
SELECT FIRST_NAME FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Shiping')
OR 
E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS WHERE CITY = 'Seattle');

12 DISPLAY LAST_NAME FOR THOSE WHO WORKS IN Executive OR WHO GOES TO Canada COUNTRY
SELECT LAST_NAME FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Executive') 
OR 
E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS NATURAL JOIN COUNTRIES WHERE COUNTRY_NAME = 'Canada');


13 DISPLAY FIRST_NAME , LAST_NAME FOR THOSE WHO WORKS IN Accounting DEPARTMENT OR WHO GOES TO Europe
SELECT FIRST_NAME , LAST_NAME FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Accounting') 
OR 
E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS NATURAL JOIN COUNTRIES NATURAL JOIN REGIONS WHERE REGION_NAME = 'Europe');
----------------------------------------------------------
SOLVE BELOW QUERIES USING TWO STYLES : 1 JOINS 2 SUB QUERY
----------------------------------------------------------

14 DISPLAY THOSE WHO GETS HIGHER SALARY THAN Abel
1)SELECT * FROM EMPLOYEES 
WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Abel');

2) SELECT E.* FROM EMPLOYEES E
 JOIN (SELECT SALARY AS ABEL_SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Abel') T ON E.SALARY > T.ABEL_SALARY;

15 DISPLAY THOSE WHO WERE HIRED AFTER Diana
1)SELECT * FROM EMPLOYEES 
WHERE HIRE_DATE > (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Diana');

2) SELECT E.* FROM EMPLOYEES E
 JOIN (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Diana') T ON E.HIRE_DATE > T.HIRE_DATE;

16 DISPLAY THOSE WHO WORKS IN Executive DEPARTMENT
1)SELECT * FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Executive');

2) SELECT E.* FROM EMPLOYEES E
 JOIN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Executive') T ON E.DEPARTMENT_ID = T.DEPARTMENT_ID;


17 DISPLAY THOSE WHO REPORTS TO Peter's MANAGER
1)SELECT * FROM EMPLOYEES 
WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Peter');

2)  SELECT E.* FROM EMPLOYEES E
	JOIN (SELECT MANAGER_ID FROM EMPLOYEES 
	WHERE FIRST_NAME = 'Peter') T ON T.MANAGER_ID = E.MANAGER_ID;


18 DISPLAY FIRST_NAME , DEPARTMENT_ID OF THOSE WHO WORKS IN Shiping DEPARTMENT
1)SELECT FIRST_NAME , DEPARTMENT_ID FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Shiping');

2)SELECT FIRST_NAME , DEPARTMENT_ID FROM EMPLOYEES E
NATURAL JOIN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Shiping');

19 DISPLAY FIRST_NAME , MANAGER_ID THOSE WHO REPORTS TO Kevin
1)SELECT FIRST_NAME , MANAGER_ID FROM EMPLOYEES
WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Kevin');

2)SELECT FIRST_NAME , MANAGER_ID FROM EMPLOYEES
NATURAL JOIN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Kevin');

20 DISPLAY FIRST_NAME , SALARY FOR THOSE WHOSE SALARY IS LOWER THAN Eleni
1) SELECT FIRST_NAME , SALARY FROM EMPLOYEES
   WHERE SALARY < (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Eleni'); 

2) SELECT E.FIRST_NAME , E.SALARY FROM EMPLOYEES E
   JOIN (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Eleni') T ON E.SALARY < T.SALARY; 

21 DISPLAY FIRST_NAME , HIRE_DATE FOR THOSE WHO WERE HIRED BEFORE Pat
1) SELECT FIRST_NAME , HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Pat');
2) SELECT E.FIRST_NAME , E.HIRE_DATE FROM EMPLOYEES E 
   JOIN (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Pat') T ON E.HIRE_DATE < T.HIRE_DATE;

22 DISPLAY FIRST_NAME AND HIRE YEAR FOR THE EMPLOYEES WHO WERE HIRED IN THE SAME YEAR IN WHICH Randall HIRED.
1)SELECT FIRST_NAME , TO_CHAR(HIRE_DATE,'RRRR') FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'RRRR') IN (SELECT TO_CHAR(HIRE_DATE,'RRRR') FROM EMPLOYEES WHERE FIRST_NAME = 'Randall');

2)SELECT E.FIRST_NAME , SUBSTR(E.HIRE_DATE,-2) HIRE_YEAR FROM EMPLOYEES E
JOIN (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Randall') T ON SUBSTR(E.HIRE_DATE,-2) = SUBSTR(T.HIRE_DATE,-2);


23 DISPLAY FIRST_NAME , DEPARTMENT_ID FOR THOSE WHO GOES TO Toronto
1)SELECT FIRST_NAME , DEPARTMENT_ID FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS WHERE CITY = 'Toronto');

2)SELECT FIRST_NAME , DEPARTMENT_ID FROM EMPLOYEES 
NATURAL JOIN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS WHERE CITY = 'Toronto');

24 DISPLAY EMPLOYEE_ID , FIRST_NAME FOR THOSE WHO HAVE NOT PROMOTION
1)SELECT EMPLOYEE_ID , FIRST_NAME FROM EMPLOYEES 
WHERE EMPLOYEE_ID NOT IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY);

2)SELECT E.EMPLOYEE_ID, E.FIRST_NAME
FROM EMPLOYEES E
LEFT JOIN JOB_HISTORY T ON E.EMPLOYEE_ID = T.EMPLOYEE_ID
WHERE T.EMPLOYEE_ID IS NULL;

25 DISPLAY FIRST_NAME , SALARY FOR THOSE WHO GETS SALARY IN GRADE_LEVEL 'D'
1)SELECT FIRST_NAME , SALARY FROM EMPLOYEES 
WHERE SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D');

2)SELECT FIRST_NAME , SALARY FROM EMPLOYEES E
JOIN (SELECT * FROM JOB_GRADES WHERE GRADE_LEVEL = 'D')T ON E.SALARY BETWEEN T.LOWEST_SAL AND T.HIGHEST_SAL;

26 DISPLAY FIRST_NAME , JOB_ID , DEPARTMENT_ID , SALARY THOSE WHO HAVE GOT PROMOTION (REMOVE ALL DUPLICATE ROWS)
1)SELECT FIRST_NAME , JOB_ID , DEPARTMENT_ID , SALARY FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY); 

2)SELECT DISTINCT FIRST_NAME , JOB_ID , DEPARTMENT_ID , SALARY FROM EMPLOYEES
NATURAL JOIN(SELECT EMPLOYEE_ID FROM JOB_HISTORY); 

27 DISPLAY FIRST_NAME FOR THOSE WHO GOES TO Canada
1)SELECT FIRST_NAME FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS NATURAL JOIN COUNTRIES WHERE COUNTRY_NAME = 'Canada');

2)SELECT FIRST_NAME FROM EMPLOYEES 
NATURAL JOIN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS NATURAL JOIN COUNTRIES WHERE COUNTRY_NAME = 'Canada');

28 DISPLAY FIRST_NAME , JOB_ID FOR THOSE WHOSE JOB_TITLE IS Stock Manager OR Accounting Manager (DON'T USE 'IN' OPERATOR)
1)SELECT FIRST_NAME , JOB_ID FROM EMPLOYEES
WHERE JOB_ID = (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE = 'Stock Manager') OR JOB_ID = (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE = 'Accounting Manager'); 

2)SELECT FIRST_NAME , JOB_ID FROM EMPLOYEES E
NATURAL JOIN (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE = 'Stock Manager' OR JOB_TITLE = 'Accounting Manager');

29 DISPLAY FIRST_NAME , COMMISSION AMOUNT FOR THOSE WHO GETS HIGHER COMMISSION AMOUNT THAN Zlotkey
1)SELECT FIRST_NAME , COMMISSION_PCT * SALARY COMMISSION_AMOUNT FROM EMPLOYEES 
WHERE COMMISSION_PCT * SALARY > (SELECT COMMISSION_PCT * SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Zlotkey');

2)SELECT E.FIRST_NAME , E.COMMISSION_PCT * E.SALARY COMMISSION_AMOUNT FROM EMPLOYEES E 
JOIN (SELECT COMMISSION_PCT * SALARY COMMISSION_AMOUNT FROM EMPLOYEES WHERE LAST_NAME = 'Zlotkey')T ON T.COMMISSION_AMOUNT < (E.COMMISSION_PCT * E.SALARY);

30 DISPLAY FIRST_NAME , SALARY FOR THOSE WHO GETS SALARY OUTSIDE GRADE_LEVEL 'C'
1)SELECT FIRST_NAME , SALARY FROM EMPLOYEES
WHERE SALARY NOT BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'C') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'C')

2)SELECT E.FIRST_NAME , E.SALARY FROM EMPLOYEES E
JOIN (SELECT * FROM JOB_GRADES WHERE GRADE_LEVEL = 'C')T ON E.SALARY NOT BETWEEN T.LOWEST_SAL AND T.HIGHEST_SAL; 

31 DISPLAY EMPLOYEE_ID AND FIRST_NAME WHO HAVE GOT PROMPTION.
1)SELECT EMPLOYEE_ID , FIRST_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM JOB_HISTORY);

2) SELECT DISTINCT EMPLOYEE_ID , FIRST_NAME FROM EMPLOYEES
   NATURAL JOIN (SELECT EMPLOYEE_ID FROM JOB_HISTORY);
   
32 DISPLAY THOSE REGION_NAMES IN WHICH NO COUNTRY EXISTS.
1) SELECT REGION_NAME FROM REGIONS WHERE REGION_ID IN (SELECT REGION_ID FROM COUNTRIES RIGHT JOIN REGIONS USING (REGION_ID) WHERE COUNTRY_ID IS NULL);

2) SELECT REGION_NAME FROM REGIONS 
   NATURAL JOIN (SELECT REGION_ID FROM COUNTRIES RIGHT JOIN REGIONS USING (REGION_ID) WHERE COUNTRY_ID IS NULL);

33 DISPLAY FIRST_NAME AND HIRE YEAR FOR THE EMPLOYEES WHO WERE HIRED IN THE SAME YEAR IN WHICH Kimerely HIRED.
1) SELECT FIRST_NAME , TO_CHAR(HIRE_DATE,'RRRR') FROM EMPLOYEES 
WHERE TO_CHAR(HIRE_DATE,'RRRR') = (SELECT TO_CHAR(HIRE_DATE,'RRRR') FROM EMPLOYEES WHERE FIRST_NAME = 'Kimerely'); 

2)  SELECT FIRST_NAME , TO_CHAR(HIRE_DATE,'RRRR') HIRE_YEAR FROM EMPLOYEES E 
JOIN (SELECT TO_CHAR(HIRE_DATE,'RRRR') AS HIRE_YEAR FROM EMPLOYEES WHERE FIRST_NAME = 'Kimerely')T ON T.HIRE_YEAR = TO_CHAR(E.HIRE_DATE,'RRRR'); 



