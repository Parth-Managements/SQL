1 DISPLAY ONLY THOSE DEPARTMENT_NAME IN WHICH NO EMPLOYEE IS HIRED
SELECT DEPARTMENT_NAME FROM DEPARTMENTS LEFT OUTER JOIN EMPLOYEES USING (DEPARTMENT_ID) WHERE EMPLOYEE_ID IS NULL;

2 DISPLAY ONLY THOSE EMPLOYEE FIRST_NAME WHOSE DEPARTMENT_ID IS NOT YET DECIDED
SELECT FIRST_NAME FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID WHERE D.DEPARTMENT_ID IS NULL;

3 DISPLAY THOSE REGION_NAME IN WHICH NO COUNTRY EXISTS
SELECT REGION_NAME FROM REGIONS R LEFT OUTER JOIN COUNTRIES C ON R.REGION_ID = C.REGION_ID WHERE C.COUNTRY_ID IS NULL; 

4 DISPLAY THOSE FIRST_NAME WHO HAVE NOT GOT ANY PROMOTION
SELECT E.FIRST_NAME FROM EMPLOYEES E LEFT OUTER JOIN JOB_HISTORY USING (EMPLOYEE_ID) WHERE START_DATE IS NULL;

5 DISPLAY ONLY THOSE COUNTRY_NAME IN WHICH NO LOCATION IS FIXED
SELECT COUNTRY_NAME FROM COUNTRIES LEFT OUTER JOIN LOCATIONS USING (COUNTRY_ID) WHERE LOCATIONS.LOCATION_ID IS NULL;

6 DISPLAY THOSE EMPLOYEE FIRST_NAME WHO HAVE GOT PROMOTION
SELECT E.FIRST_NAME FROM EMPLOYEES E LEFT OUTER JOIN JOB_HISTORY USING (EMPLOYEE_ID) WHERE START_DATE IS NOT NULL;

7 DISPLAY THE GRADE INFO. FROM JOB_GRADES TABLE, IN WHICH NO EMPLOYEE IS GETTING SALARY
SELECT GRADE_LEVEL FROM EMPLOYEES E RIGHT OUTER JOIN JOB_GRADES ON E.SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL WHERE E.SALARY IS NULL;

8 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , BOTH MANAGER_ID (USE USING CLAUSE) DISPLAY EXTRA FIRST_NAME.
SELECT FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , E.MANAGER_ID , D.MANAGER_ID FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D USING (DEPARTMENT_ID);

9 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , BOTH MANAGER_ID (DON'T USE USING CLAUSE) DISPLAY EXTRA DEPARTMENT_NAME.
SELECT FIRST_NAME , DEPARTMENT_NAME , E.DEPARTMENT_ID , E.MANAGER_ID , D.MANAGER_ID FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;

10 DISPLAY DEPARTMENT_NAME IN WHICH NO EMPLOYEE IS HIRED
SELECT DEPARTMENT_NAME FROM DEPARTMENTS LEFT OUTER JOIN EMPLOYEES USING (DEPARTMENT_ID) WHERE EMPLOYEE_ID IS NULL;

11 DISPLAY THOSE REGION_NAME IN WHICH NO CITY EXISTS
SELECT REGION_NAME FROM REGIONS LEFT OUTER JOIN COUNTRIES USING (REGION_ID) LEFT OUTER JOIN LOCATIONS USING (COUNTRY_ID) WHERE CITY IS NULL;

12 JOIN EMPLOYEES AND DEPARTMENTS TABLE, DISPLAY EXTRA ROWS OF EMPLOYEES TABLE
SELECT E.* , D.* FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

13 JOIN EMPLOYEES AND DEPARTMENTS TABLE, DISPLAY EXTRA ROWS OF BOTH TABLES
SELECT E.* , D.* FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

14 DISPLAY ONLY THOSE DEPRATMENT_NAME, IN WHICH NO ONE IS HIRED
SELECT DEPARTMENT_NAME FROM DEPARTMENTS LEFT OUTER JOIN EMPLOYEES USING (DEPARTMENT_ID) WHERE EMPLOYEE_ID IS NULL;

15 DISPLAY EMPLOYEE'S FIRST_NAME , MANAGER'S FIRST_NAME
SELECT E.FIRST_NAME , EMP.FIRST_NAME FROM EMPLOYEES E INNER JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID = E.MANAGER_ID;

16 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOYEES' SALARY,  MANAGER'S FIRST_NAME, MANAGER'S SALARY
SELECT E.FIRST_NAME , E.SALARY , EMP.FIRST_NAME , EMP.SALARY FROM EMPLOYEES E INNER JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID = E.MANAGER_ID;

17 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOEYES' SALARY, EMPLOYEE'S JOB_TITLE, MANAGER'S FIRST_NAME, MANAGER'S SALARY, MANAGER'S JOB_TITLE
SELECT E.FIRST_NAME , E.SALARY , J.JOB_TITLE , EMP.FIRST_NAME , EMP.SALARY , JB.JOB_TITLE FROM EMPLOYEES E INNER JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID = E.MANAGER_ID INNER JOIN JOBS J ON E.JOB_ID = J.JOB_ID INNER JOIN JOBS JB ON EMP.JOB_ID=JB.JOB_ID ;

18 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOEYES' SALARY, EMPLOYEE'S JOB_TITLE,, SALARY , GRADE_LEVEL  MANAGER'S FIRST_NAME, MANAGER'S SALARY, MANAGER'S JOB_TITLE , SALARY , GRADE_LEVEL
SELECT E.FIRST_NAME , E.SALARY , J.JOB_TITLE , JG.GRADE_LEVEL , EMP.FIRST_NAME , EMP.SALARY , JB.JOB_TITLE , JGL.GRADE_LEVEL FROM EMPLOYEES E INNER JOIN EMPLOYEES EMP ON EMP.EMPLOYEE_ID = E.MANAGER_ID INNER JOIN JOBS J ON E.JOB_ID = J.JOB_ID INNER JOIN JOBS JB ON EMP.JOB_ID=JB.JOB_ID INNER JOIN JOB_GRADES JG ON E.SALARY BETWEEN JG.LOWEST_SAL AND JG.HIGHEST_SAL INNER JOIN JOB_GRADES JGL ON EMP.SALARY BETWEEN JGL.LOWEST_SAL AND JGL.HIGHEST_SAL;

19 DISPLAY ONLY THOSE REGION_NAME IN WHICH NO COUNTRY EXISTS.
SELECT REGION_NAME FROM REGIONS FULL OUTER JOIN COUNTRIES USING (REGION_ID) WHERE COUNTRY_ID IS NULL;