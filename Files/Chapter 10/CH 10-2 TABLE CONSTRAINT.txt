CREATE BELOW TABLES WITH DEFAULT AND CONSTRAINTS REQUIRED :

1. CREATE TABLE TO STORE BELOW INFO.
   FACULTIES : FACULTY_NO, FACNM, JOINDATE, SALARY
	CREATE TABLE FACULTIES (
	FACULTY_NO NUMBER PRIMARY KEY,
	FACNM VARCHAR2(100) NOT NULL,
	JOINDATE DATE DEFAULT SYSDATE NOT NULL,
	SALARY NUMBER(10, 2) CHECK (SALARY > 0)
	);

2. CREATE TABLE TO STORE BELOW INFO.
   SUBJECTS : SUBJECT_NO, SUBNM, DURATION_IN_DAYS
   CREATE TABLE SUBJECTS (
    SUBJECT_NO NUMBER PRIMARY KEY,
    SUBNM VARCHAR2(100) NOT NULL,
    DURATION_IN_DAYS NUMBER CHECK (DURATION_IN_DAYS > 0)
	);

3. CREATE TABLE TO STORE BELOW INFO.
   FACULTY_SUBJECT : FACULTY_NO, SUBJECT_NO
   CREATE TABLE FACULTY_SUBJECT (
    FACULTY_NO NUMBER,
    SUBJECT_NO NUMBER,
    FOREIGN KEY (FACULTY_NO) REFERENCES FACULTIES(FACULTY_NO),
    FOREIGN KEY (SUBJECT_NO) REFERENCES SUBJECTS(SUBJECT_NO)
	);

4. CREATE TABLE TO STORE BELOW INFO.
   COURSE : COURSE_NO, COURSE_NAME, DURATION, GENERAL_CLUB, TOTAL_FEES
	CREATE TABLE COURSE (
    COURSE_NO NUMBER PRIMARY KEY,
    COURSE_NAME VARCHAR2(100) NOT NULL,
    DURATION NUMBER CHECK (DURATION > 0),
    GENERAL_CLUB VARCHAR2(50) DEFAULT 'General',
    TOTAL_FEES NUMBER CHECK (TOTAL_FEES >= 0)
	);
	
5. CREATE TABLE TO STORE BELOW INFO.
   STUDENTS : STUDENT_NO, STUNM, BIRTH_DATE, COURSE_NO
   CREATE TABLE STUDENTS (
    STUDENT_NO NUMBER PRIMARY KEY,
    STUNM VARCHAR2(100) NOT NULL,
    BIRTH_DATE DATE,
    COURSE_NO NUMBER,
    FOREIGN KEY (COURSE_NO) REFERENCES COURSE(COURSE_NO)
	);

6. CREATE TABLE TO STORE BELOW INFO.
   FEES : RECEIPT_NO, RECDT, AMOUNT, CASH_OR_CHEQUE, CHEQUE_NO, CHEQUE_DATE, BANK_NAME
   CREATE TABLE FEES (
    RECEIPT_NO NUMBER PRIMARY KEY,
    RECDT DATE DEFAULT SYSDATE NOT NULL,
    AMOUNT NUMBER(10, 2) CHECK (AMOUNT > 0),
    CASH_OR_CHEQUE VARCHAR2(10) CHECK (CASH_OR_CHEQUE IN ('Cash', 'Cheque')),
    CHEQUE_NO VARCHAR2(20),
    CHEQUE_DATE DATE,
    BANK_NAME VARCHAR2(100),
	);

7. CREATE TABLE TO STORE BELOW INFO.
   MARKS : STUUDENT_NO, SUBJECT_NO, FACULTY_NO, MARKS_SCORED
   CREATE TABLE MARKS (
    STUDENT_NO NUMBER,
    SUBJECT_NO NUMBER,
    FACULTY_NO NUMBER,
    MARKS_SCORED NUMBER CHECK (MARKS_SCORED BETWEEN 0 AND 100),
    PRIMARY KEY (STUDENT_NO, SUBJECT_NO, FACULTY_NO),
    FOREIGN KEY (STUDENT_NO) REFERENCES STUDENTS(STUDENT_NO),
    FOREIGN KEY (SUBJECT_NO) REFERENCES SUBJECTS(SUBJECT_NO),
    FOREIGN KEY (FACULTY_NO) REFERENCES FACULTIES(FACULTY_NO)
	);

8. CREATE TABLE TO STORE BELOW INFO.
   BATCH_MASTER : BATCH_NO, FACULTY_NO, SUBJECT_NO, START_DT, DURATION_IN_DAYS
   CREATE TABLE BATCH_MASTER (
    BATCH_NO NUMBER PRIMARY KEY,
    FACULTY_NO NUMBER,
    SUBJECT_NO NUMBER,
    START_DT DATE NOT NULL,
    DURATION_IN_DAYS NUMBER CHECK (DURATION_IN_DAYS > 0),
    FOREIGN KEY (FACULTY_NO) REFERENCES FACULTIES(FACULTY_NO),
    FOREIGN KEY (SUBJECT_NO) REFERENCES SUBJECTS(SUBJECT_NO)	
	);

9. CREATE TABLE TO STORE BELOW INFO.
   BATCH_DETAILS : BATCH_NO, STUDENT_NO
   CREATE TABLE BATCH_DETAILS (
    BATCH_NO NUMBER,
    STUDENT_NO NUMBER,
    PRIMARY KEY (BATCH_NO, STUDENT_NO),
    FOREIGN KEY (BATCH_NO) REFERENCES BATCH_MASTER(BATCH_NO),
    FOREIGN KEY (STUDENT_NO) REFERENCES STUDENTS(STUDENT_NO)
	);


10. CREATE TABLE TO STORE BELOW INFO.
    BATCH_ATTENDANCE : BATCH_NO, STUDENT_NO , LECTURE_DATE, PRESENT_STATUS
	CREATE TABLE BATCH_ATTENDANCE (
    BATCH_NO NUMBER,
    STUDENT_NO NUMBER,
    LECTURE_DATE DATE NOT NULL,
    PRESENT_STATUS CHAR(1) CHECK (PRESENT_STATUS IN ('P', 'A')),
    PRIMARY KEY (BATCH_NO, STUDENT_NO, LECTURE_DATE),
    FOREIGN KEY (BATCH_NO) REFERENCES BATCH_MASTER(BATCH_NO),
    FOREIGN KEY (STUDENT_NO) REFERENCES STUDENTS(STUDENT_NO)
	);

   