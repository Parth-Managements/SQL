1 DISPLAY THOSE EMPLOYEES WHO GETS HIGHER SALARY THAN ALL EMPLOYEES OF DEPARTMENT 50
SELECT * FROM EMPLOYEES WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 50);

2 DISPLAY ALL EMPLOYEES WHO WERE HIRED BEFORE Diana
SELECT * FROM EMPLOYEES WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Diana');

3 DISPLAY THOSE EMPLOYEES WHO WORKS IN Executive DEPARTMENT
SELECT E.* FROM EMPLOYEES E WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Executive');

4 DISPLAY THOSE WHO WORKS IN Toronto CITY
SELECT E.* FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.LOCATION_ID = (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY = 'Toronto');

5 DISPLAY THOSE WHO GETS LOWEST SALARY IN THEIR DEPARTMENT
SELECT * FROM EMPLOYEES WHERE (SALARY,DEPARTMENT_ID) IN (SELECT MIN(SALARY) , DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

6 DISPLAY THOSE WHO GET HIGHEST SALARY FOR THEIR JOB_ID
SELECT * FROM EMPLOYEES WHERE (SALARY,JOB_ID) IN (SELECT MAX(SALARY) , JOB_ID FROM EMPLOYEES GROUP BY JOB_ID);

7 DISPLAY THOSE WHO GETS LOWEST SALARY FOR THEIR MANAGER
SELECT * FROM EMPLOYEES WHERE (SALARY,MANAGER_ID) IN (SELECT MIN(SALARY) , MANAGER_ID FROM EMPLOYEES GROUP BY MANAGER_ID);

8 DISPLAY THOSE WHO GETS HIGHEST SALARY FOR THEIR HIRE YEAR
SELECT * FROM EMPLOYEES WHERE (SALARY,SUBSTR(HIRE_DATE,-2)) IN (SELECT MAX(SALARY) , SUBSTR(HIRE_DATE,-2) FROM EMPLOYEES GROUP BY SUBSTR(HIRE_DATE,-2));

9 DISPLAY FIRST_NAME AND SALARY FOR THE EMPLOYEES WHO GETS HIGHEST SALARY QUARTER WISE (IGNORE YEAR)
SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE (SALARY , TO_CHAR(HIRE_DATE,'Q')) IN (SELECT MAX(SALARY) , TO_CHAR(HIRE_DATE,'Q') FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q'));

10 DISPLAY FIRST_NAME FOR THE EMPLOYEES WHO WORKS IN United States of America
SELECT FIRST_NAME FROM EMPLOYEES E
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS NATURAL JOIN COUNTRIES WHERE COUNTRY_NAME = 'United States of America');

11 DISPLAY LAST_NAME FOR THE EMPLOYEES WHO WORKS IN Europe
SELECT LAST_NAME FROM EMPLOYEES E WHERE
DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS NATURAL JOIN LOCATIONS NATURAL JOIN COUNTRIES NATURAL JOIN REGIONS WHERE REGION_NAME = 'Europe');

12 DISPLAY FIRST_NAME , JOB_ID FOR THE EMPLOYEES WHO WORKS AS Programmer
SELECT FIRST_NAME , JOB_ID FROM EMPLOYEES WHERE JOB_ID IN (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE = 'Programmer');

13 DISPLAY DEPARTMENT_NAME WHICH IS LOCATED IN Canada
SELECT DEPARTMENT_NAME FROM DEPARTMENTS D
WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATIONS NATURAL JOIN COUNTRIES WHERE COUNTRY_NAME = 'Canada');

14 DISPLAY CITY WHICH IS LOCATED IN Europe
SELECT CITY FROM LOCATIONS L
WHERE COUNTRY_ID IN (SELECT COUNTRY_ID FROM COUNTRIES NATURAL JOIN REGIONS WHERE REGION_NAME = 'Europe');

15 DISPLAY THOSE WHO REPORTS TO ANY MANAGER (19 ROWS)
SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL);

16 DISPLAY THOSE WHO REPORTS TO ANY DEPARTMENT HEAD (16 ROWS)
SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS);

17 DISPLAY THOSE WHO REPORTS TO HIS DEPARTMENT'S HEAD (12 ROWS)
SELECT DEPARTMENT_ID , MANAGER_ID FROM EMPLOYEES WHERE (DEPARTMENT_ID , MANAGER_ID) IN (SELECT DEPARTMENT_ID , MANAGER_ID FROM DEPARTMENTS);

18 DISPLAY THOSE WHO REPORTS TO Kevin.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Kevin');

19 DISPLAY THOSE WHO REPORTS TO MANAGER OF Michael.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Michael');

20 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO Neena.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID NOT IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Neena'); 

21 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO MANAGER OF Peter.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID NOT IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Peter'); 

22 DISPLAY THOSE WHO REPORTS TO Steven OR Eleni.
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Eleni' OR FIRST_NAME = 'Steven');

23 DISPLAY THOSE EMPLOYEES WHO GETS SALARY IN THE RANGE BETWEEN Shelley and Jennifer.
SELECT * FROM EMPLOYEES
WHERE SALARY >= ANY (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Jennifer' OR FIRST_NAME = 'Shelley')
AND 
	  SALARY <= ANY (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Jennifer' OR FIRST_NAME = 'Shelley');

24 DISPLAY THOSE WHO WERE JOINED BETWEEN Kimerely and Shelley. (INCLUDING BOTH)
SELECT * FROM EMPLOYEES 
WHERE HIRE_DATE BETWEEN 
(SELECT MIN(HIRE_DATE) FROM EMPLOYEES WHERE FIRST_NAME = 'Shelley' OR FIRST_NAME = 'Kimerely')
AND 
(SELECT MAX(HIRE_DATE) FROM EMPLOYEES WHERE FIRST_NAME = 'Shelley' OR FIRST_NAME = 'Kimerely');

25 DISPLAY THOSE WHO WORKS IN DEPARTMENTS OF Rajs and Taylor.
SELECT * FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME = 'Rajs' OR LAST_NAME ='Taylor'); 

26 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO MANAGERS OF Matos AND Lorentz.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID NOT IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE LAST_NAME = 'Matos' OR LAST_NAME = 'Lorentz'); 
	
27 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN THE SALARY RANGE OF Shelley and Kimerely. (LEAST, GREATEST)
SELECT * FROM EMPLOYEES 
WHERE SALARY NOT BETWEEN 
(SELECT MIN(SALARY) FROM EMPLOYEES WHERE FIRST_NAME = 'Kimerely' OR FIRST_NAME = 'Shelley')
AND 
(SELECT MAX(SALARY) FROM EMPLOYEES WHERE FIRST_NAME = 'Kimerely' OR FIRST_NAME = 'Shelley');

28 DISPLAY ALL WHO GETS SALARY IN GRADE_LEVEL D.
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'D');

29 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Manager.
SELECT * FROM EMPLOYEES
WHERE SALARY BETWEEN
(SELECT MIN(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Sales Manager')
AND 
(SELECT MAX(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Sales Manager');

30 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN GRADE_LEVEL C AND E.
SELECT * FROM EMPLOYEES WHERE SALARY NOT BETWEEN 
(SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'C') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'C')
AND
SALARY NOT BETWEEN
(SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'E') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL = 'E');

31 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY OUTSIDE RANGE OF Programmer.
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 
(SELECT MIN(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Programmer')
AND 
(SELECT MAX(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Programmer');

32 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Representative BUT NOT IN THE RANGE OF Accounting Manager.
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 
(SELECT MIN(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Sales Representative')
AND 
(SELECT MAX(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Sales Representative')
AND
SALARY NOT BETWEEN
(SELECT MIN(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Accounting Manager')
AND 
(SELECT MAX(SALARY) FROM EMPLOYEES NATURAL JOIN JOBS WHERE JOB_TITLE = 'Accounting Manager');


33 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN THE RANGE OF SALARY PAID TO Michael AND Kevin.
SELECT * FROM EMPLOYEES
WHERE SALARY NOT BETWEEN
(SELECT MIN(SALARY) FROM EMPLOYEES WHERE FIRST_NAME = 'Kevin')
AND
(SELECT MAX(SALARY) FROM EMPLOYEES WHERE FIRST_NAME = 'Michael');

34 DISPLAY ALL OTHER THAN THOSE WHO WERE HIRED FIRST IN THEIR HIRE YEAR.
SELECT * FROM EMPLOYEES
WHERE (HIRE_DATE,SUBSTR(HIRE_DATE,-2)) NOT IN
(SELECT MIN(HIRE_DATE) , SUBSTR(HIRE_DATE,-2) FROM EMPLOYEES GROUP BY SUBSTR(HIRE_DATE,-2));

35 DISPLAY ALL EXCEPT THOSE WHO DOES Peter's JOB.
SELECT * FROM EMPLOYEES 
WHERE JOB_ID NOT IN (SELECT JOB_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Peter'); 

36 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO Eleni.
SELECT * FROM EMPLOYEES 
WHERE MANAGER_ID NOT IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Eleni'); 





