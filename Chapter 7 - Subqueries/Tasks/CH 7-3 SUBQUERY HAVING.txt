1 DISPLAY THE DEPARTMENT_ID AND AVERAGE SALARY WHICH IS PAID HIGHEST AVERAGE SALARY
SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

2 DISPLAY THE JOB_ID AND NO. OF EMPLOYEES FOR WHICH MINIMUM NO. OF EMPLOYEES WORK
SELECT JOB_ID , COUNT(*) FROM EMPLOYEES GROUP BY JOB_ID
HAVING COUNT(*) = (SELECT MIN(COUNT(*)) FROM EMPLOYEES GROUP BY JOB_ID);

3 DISPLAY THE MANAGER_ID AND NO. OF EMPLOYEES TO WHOM HIGHEST NO. OF EMPLOYEES REPORT
SELECT MANAGER_ID , COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY MANAGER_ID);

4 DISPLAY HIRE YEAR AND NO. OF EMPLOYEES IN WHICH HIGHEST NO. OF EMPLOYEES HIRED
SELECT TO_CHAR(HIRE_DATE,'RRRR') , COUNT(*) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'RRRR')
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'RRRR'));

5 DISPLAY THE DEPARTMENT_ID AND NO. OF EMPLOYEES IN WHICH LOWEST NO. OF EMPLOYEES WORK
SELECT DEPARTMENT_ID , COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT_ID
HAVING COUNT(*) = (SELECT MIN(COUNT(*)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

6 DISPLAY THE QUARTER AND NO. OF EMPLOYES IN WHICH HIGHEST NO. OF EMPLOYEES HIRED
SELECT TO_CHAR(HIRE_DATE,'Q') , COUNT(*) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q')
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q'));

7 DISPLAY THE JOB_ID AND TOTAL SALARY PAID FOR THE JOB FOR WHICH LOWEST TOTAL SALARY IS PAID
SELECT JOB_ID , SUM(SALARY) FROM EMPLOYEES GROUP BY JOB_ID
HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID);

8 DISPLAY THE MANAGER_ID AND AVERAGE SALARY PAID FOR THE MANAGER TO WHOM HIGHEST AVERAGE SALARY IS PAID
SELECT MANAGER_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);

9 DISPLAY THE DEPARTMENT_ID AND MINIMUM SALARY PAID FOR THE DEPARTMENT TO WHICH HIGHEST MINIMUM SALARY IS PAID
SELECT DEPARTMENT_ID , MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID
HAVING MIN(SALARY) = (SELECT MAX(MIN(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

10 DISPLAY THE DEPARTMENT_ID , JOB_ID AND AVERAGE SALARY FOR THE DEPARTMENT_ID AND JOB_ID (COMBINATION) TO WHICH HIGHEST AVERAGE SALARY IS PAID
SELECT DEPARTMENT_ID , JOB_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID , JOB_ID
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID , JOB_ID);

11 DISPLAY JOB_ID AND COUNT OF EMPLOYEES FOR WHICH EITHER LOWEST OR HIGHEST COUNT OF EMPLOYEE WORKS (DON'T USE IN/OR OPERATOR)
SELECT JOB_ID , COUNT(*) FROM EMPLOYEES GROUP BY JOB_ID
HAVING COUNT(*) = (SELECT MIN(COUNT(*)) FROM EMPLOYEES GROUP BY JOB_ID)
OR COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY JOB_ID);

12 DISPLAY MANAGER_ID AND TOTAL OF SALARY FOR WHICH EITHER MINIMUM OR MAXIMUM TOTAL SALARY IS PAID (USE LOGICAL OPERATOR)
SELECT MANAGER_ID , SUM(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID
HAVING SUM(SALARY) = (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID)
OR SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);

13 DISPLAY DEPARTMENT_ID AND AVERAGE SALARY FOR WHICH EITHER LOWEST OR MAXIMUM AVERAGE SALARY IS PAID (DON'T USE LOGICAL OPERATOR)
SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID 
HAVING AVG(SALARY) IN ((SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID),(SELECT MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID));

14 DISPLAY MANAGER_ID AND AVERAGE SALARY FOR ALL MANAGER_ID OTHER THAN THOSE WHO GETS EITHER LOWEST OR HIGHEST AVERAGE SALARY IS PAID (USE IN OPERATOR)
SELECT MANAGER_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID 
HAVING AVG(SALARY) NOT IN ((SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID),(SELECT MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID));

15 DISPLAY JOB_ID , MANAGER_ID AND COUNT OF EMPLOYEES FOR ALL JOB_ID AND MANAGER_ID OTHER THAN THOSE WHICH EMPLOYS MINIMUM OR MAXIMUM EMPLOYEES (DON'T USE SPECIAL AND MULTI-ROW OPERATORS)
SELECT JOB_ID , MANAGER_ID , COUNT(*) FROM EMPLOYEES GROUP BY JOB_ID , MANAGER_ID
HAVING COUNT(*) != (SELECT MIN(COUNT(*)) FROM EMPLOYEES GROUP BY JOB_ID , MANAGER_ID)
AND COUNT(*) != (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY JOB_ID,MANAGER_ID);

16 DISPLAY HIRE QUARTER WISE COUNT OF EMPLOYEES FOR ALL QUARTERS EXCEPT FOR LOWEST EMPLOYEES HIRED.
SELECT TO_CHAR(HIRE_DATE,'Q') , COUNT(*) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q')
HAVING COUNT(*) != (SELECT MIN(COUNT(*)) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q'));

17 DISPLAY GRADE_LEVEL AND COUNT OF EMPLOYEES FOR WHICH HIGHEST EMPLOYEE WORKS.
SELECT GRADE_LEVEL , COUNT(*) FROM EMPLOYEES 
JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL
GROUP BY GRADE_LEVEL
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL GROUP BY GRADE_LEVEL);

18 DISPLAY GRADE_LEVEL AND TOTAL SALARY FOR ALL GRADE_LEVEL EXCEPT FOR WHICH LOWEST TOTAL SALARY IS PAID.
SELECT GRADE_LEVEL , SUM(SALARY) FROM EMPLOYEES 
JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL
GROUP BY GRADE_LEVEL
HAVING SUM(SALARY) != (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL GROUP BY GRADE_LEVEL);

19 DISPLAY DEPARTMENT_NAME AND LOWEST SALARY FOR THE DEPARTMENT TO WHICH MAXIMUM LOWEST SALARY IS PAID.
SELECT DEPARTMENT_NAME , MIN(SALARY) FROM EMPLOYEES E 
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME
HAVING MIN(SALARY) = (SELECT MAX(MIN(SALARY)) FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID GROUP BY DEPARTMENT_NAME);
 
20 DISPLAY JOB_TITLE AND COUNT OF EMPLOYEES FOR ALL EXCEPT THOSE JOB_TITLE FOR WHICH EITHER LOWEST OR HIGHEST EMPLOYEE WORKS.
SELECT JOB_TITLE , COUNT(*) FROM EMPLOYEES
NATURAL JOIN JOBS GROUP BY JOB_TITLE
HAVING COUNT(*) IN ((SELECT MIN(COUNT(*)) FROM EMPLOYEES NATURAL JOIN JOBS GROUP BY JOB_TITLE),(SELECT MAX(COUNT(*)) FROM EMPLOYEES NATURAL JOIN JOBS GROUP BY JOB_TITLE));

