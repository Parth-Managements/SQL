1. DISPLAY FIRST_NAME , LAST_NAME , OTHER COLUMN. IT SHOULD DISPLAY SMALL CASE DATA OF COLUMN WHICH HAS SMALLER SPELLING AND ALL EXTRA CHARACTERS OF LONGER SPELLING USING CAPITAL ALPHABETS. IF LENGTH OF BOTH ARE EQUAL, IT SHOULD DISPLAY NULL. (CHAPTER 4)
SELECT FIRST_NAME,LAST_NAME, CASE WHEN LENGTH(FIRST_NAME)<LENGTH(LAST_NAME) THEN CONCAT(LOWER(FIRST_NAME),UPPER(SUBSTR(LAST_NAME,LENGTH(FIRST_NAME)+1)))
WHEN LENGTH(FIRST_NAME)>LENGTH(LAST_NAME) THEN CONCAT(LOWER(LAST_NAME),UPPER(SUBSTR(FIRST_NAME,LENGTH(LAST_NAME)+1)))
ELSE NULL END NEWNAME FROM EMPLOYEES;
   
2. DISPLAY HIRE_DATE AND ANOTHER COLUMN. IF DATE FALLS IN FIRST QUARTER THE ABBREVIATED MONTH NAME SHOULD BE DISPLAYED IN SMALL CASE. IF DATE FALLS IN SECOND QUARTER THE ABBREVIATED MONTH NAME SHOULD BE DISPLAYED IN CAMEL CASE. IF DATE FALLS IN 3rd QUARTER IT SHOULD DISPLAY FULL MONTHS IN LOWER CASE OTHER WISE FULL MONTH NAME IN UPPER CASE. (CHAPTER 4)
SELECT HIRE_DATE , CASE WHEN TO_CHAR(HIRE_DATE,'Q') = 1 THEN LOWER(TO_CHAR(HIRE_DATE,'MON')) WHEN TO_CHAR(HIRE_DATE,'Q') = 2 THEN INITCAP(TO_CHAR(HIRE_DATE,'MON')) WHEN TO_CHAR(HIRE_DATE,'Q') = 3 THEN LOWER(TO_CHAR(HIRE_DATE,'MONTH')) ELSE UPPER(TO_CHAR(HIRE_DATE,'MONTH')) END HIRE FROM EMPLOYEES;

3. DISPLAY FIRST_NAME , LAST_NAME AND OTHER COLUMN. IT SHOULD DISPLAY EITHER FIRST_NAME OR LAST_NAME WHICH HAS HIGHER COUNT OF VOWELS. (CHAPTER 4)
SELECT FIRST_NAME , LAST_NAME , 
CASE WHEN LENGTH(TRANSLATE(UPPER(FIRST_NAME) , '#QWRTYPSDFGHJKLZXCVMNB','#')) > LENGTH(TRANSLATE(UPPER(LAST_NAME) , '#QWRTYPSDFGHJKLZXCVMNB','#')) THEN FIRST_NAME ELSE LAST_NAME END TEMP 
FROM EMPLOYEES;

4. DISPLAY FIRST_NAME AND PART OF IT AS SECOND COLUMN. IT SHOULD START WITH FIRST VOWEL AND END ON LAST VOWEL IF IT HAS MORE THAN ONE. (CHAPTER 4)
SELECT FIRST_NAME , 
CASE WHEN LENGTH(TRANSLATE(UPPER(FIRST_NAME) , '#QWRTYPSDFGHJKLZXCVMNB','#')) > 1 THEN RTRIM(LTRIM(UPPER(FIRST_NAME) , 'QWRTYPSDFLKGHJZXCVMNB'),'QWRTYPSDFLKGHJZXCVMNB') ELSE NULL END TEMP 
FROM EMPLOYEES;

5. DISPLAY HIRE_DATE IN SPECIFIED FORMAT 20.January.2001 Tuesday (DON'T USE ALTER SESSION). SORT RESULT ON WEEK OF YEAR.
SELECT TO_CHAR(HIRE_DATE,'FMDD"."MoNTH"."RRRR DaY') FROM EMPLOYEES ORDER BY TO_CHAR(HIRE_DATE,'WW');

6. DISPLAY SALARY IN SPECIFIED FORMAT : Rupees Twenty-Four Thousand Only
SELECT CONCAT('RUPEES ',TO_CHAR(TO_DATE(SALARY,'SSSSS'),'SSSSSSP')) || ' ONLY' FROM EMPLOYEES;
SELECT CONCAT('RUPEES ',TO_CHAR(TO_DATE(SALARY,'J'),'JSP')) || ' ONLY' FROM EMPLOYEES;

7. DISPLAY Today is 263rd day of year 2021.
SELECT TO_CHAR(SYSDATE,'"Today is "DDDTH "day of the year" RRRR') FROM DUAL;

8. DISPLAY We are in third week of June and twenty-sixth week of two thousand twenty-one. (FOR TODAY'S DATE)
SELECT TO_CHAR(SYSDATE,'"We are in the" wspth "week of" Month "and" wwth "week of " rrrrsp') FROM DUAL;

9. DISPLAY Current month September falls in 3rd quarter of year. (FOR TODAY'S DATE)
SELECT TO_CHAR(SYSDATE,'"Current month" MonTH "falls in " Qth "quarter of the year."') FROM DUAL;

10. DISPLAY Current time is 09 hours, 26 minutes and 52 seconds. (FOR TIME AS OF NOW)
SELECT TO_CHAR(SYSDATE,'"Current time is" HH "hours," MI "minutes and" SS "seconds."') FROM DUAL;

11. DISPLAY SALARY IN SPECIFIED FORMAT : @24~000!00+ (DON'T USE ALTER SESSION)
SELECT TO_CHAR(SALARY, 'U99G999D99', 'NLS_NUMERIC_CHARACTERS = !~ NLS_DUAL_CURRENCY = @') || '+' FROM EMPLOYEES;

12. DISPLAY -12345.67 VALUE IN SPECIFIED FORMAT : {12:345;67} (DON'T USE ALTER SESSION)
SELECT TRANSLATE(TO_CHAR(-12345.67 , '99G999D99PR' , 'NLS_NUMERIC_CHARACTERS = ;:'),'<>','{}') FROM DUAL;

13. DISPLAY FIRST_NAME , LAST_NAME , FIRST VOWEL OF FIRST_NAME , LAST VOWEL OF LAST_NAME , SAME or DIFFERENT BASED OF VOWELS COMPARISON.
SELECT FIRST_NAME , LAST_NAME , SUBSTR(LTRIM(UPPER(FIRST_NAME),'#QWRTYPSDFGHJKLZXCVBNM'),1,1) , SUBSTR(RTRIM(UPPER(FIRST_NAME),'#QWRTYPSDFGHJKLZXCVBNM'),-1) , NVL2(NULLIF(SUBSTR(LTRIM(UPPER(FIRST_NAME),'#QWRTYPSDFGHJKLZXCVBNM'),1,1) , SUBSTR(RTRIM(UPPER(FIRST_NAME),'#QWRTYPSDFGHJKLZXCVBNM'),-1)),'DIFFERENT','SAME') FROM EMPLOYEES;

14. DISPLAY SALARY , LSALARY (BY REMOVING ALL OCCURRENCES OF 12350 FROM LEFT), NEWLSALARY (DISPLAY WORD 'NULL' IF LSALARY COLUMN HAS NULL VALUE.)
SELECT SALARY , LTRIM(SALARY,'12350') LSALARY , NVL(LTRIM(SALARY,'12350'),'NULL') NEWSALARY FROM EMPLOYEES;

15. DISPLAY FIRST_NAME , SALARY , DATE_YEAR = ONLY DATE AND YEAR VALUE FROM HIRE_DATE (DON'T USE SUBSTR FUNCTION). DISPLAY ONLY THOSE ROWS WHICH FINDS ANY DIGIT OF DATE_YEAR COLUMN IN SALARY COLUMN.
SELECT FIRST_NAME , SALARY , CONCAT(CONCAT(TO_CHAR(HIRE_DATE , 'DD') , '_'),TO_CHAR(HIRE_DATE,'RR')) NEW_DATE FROM EMPLOYEES
WHERE INSTR(SALARY , SUBSTR(CONCAT(CONCAT(TO_CHAR(HIRE_DATE , 'DD') , '_'),TO_CHAR(HIRE_DATE,'RR')),1,1),1) > 0 OR
INSTR(SALARY , SUBSTR(CONCAT(CONCAT(TO_CHAR(HIRE_DATE , 'DD') , '_'),TO_CHAR(HIRE_DATE,'RR')),2,1),1) > 0 OR
INSTR(SALARY , SUBSTR(CONCAT(CONCAT(TO_CHAR(HIRE_DATE , 'DD') , '_'),TO_CHAR(HIRE_DATE,'RR')),4,1),1) > 0 OR
INSTR(SALARY , SUBSTR(CONCAT(CONCAT(TO_CHAR(HIRE_DATE , 'DD') , '_'),TO_CHAR(HIRE_DATE,'RR')),5,1),1) > 0;
 
16. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. INCREMENT IS LIKE THIS : IF HIRED IN JUN OR YEAR 98 THEN 1500. IF HIRED IN JAN OR YEAR 99 THEN 2000. IF HIRED IN JUL OR ANY OF THE YEAR 90,92 OR 94 THEN 1000.
SELECT FIRST_NAME , SALARY , CASE WHEN SUBSTR(HIRE_DATE,4,3) = 'JUN' OR SUBSTR(HIRE_DATE,8,2) = 98 THEN SALARY + 1500 WHEN SUBSTR(HIRE_DATE,4,3) = 'JAN' OR SUBSTR(HIRE_DATE,8,2) = 99 THEN SALARY + 2000 WHEN SUBSTR(HIRE_DATE,4,3) = 'JUL' OR SUBSTR(HIRE_DATE,8,2) = 90 OR SUBSTR(HIRE_DATE,8,2) = 92 OR SUBSTR(HIRE_DATE,8,2) = 94 THEN SALARY + 1000 END INC FROM EMPLOYEES;

17. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. INCREMENT IS ON THE BASES OF QUARTER IN WHICH EMPLOYEE WAS HIRED. FOR Q1 500, FOR Q2 1500 , FOR Q3 2000 AND FOR REMAINING 1000.
SELECT FIRST_NAME , SALARY , CASE WHEN TO_CHAR(HIRE_DATE,'Q') = 1 THEN SALARY + 500 WHEN TO_CHAR(HIRE_DATE,'Q') = 2 THEN SALARY + 1500 WHEN TO_CHAR(HIRE_DATE,'Q') = 3 THEN SALARY + 2000 ELSE SALARY + 1000 END INC FROM EMPLOYEES;

18. DISPLAY FIRST_NAME , LAST_NAME , IF BOTH HAS SAME NO. OF VOWELS DISPLAY 'SAME' ELSE DISPLAY 'NOT SAME'.
SELECT FIRST_NAME , LAST_NAME , CASE WHEN LENGTH(TRANSLATE(UPPER(FIRST_NAME),'#QWRTYPLKJHGFDSZXCVBNM','#')) = LENGTH(TRANSLATE(UPPER(LAST_NAME),'#QWRTYPLKJHGFDSZXCVBNM','#')) THEN 'SAME' ELSE 'NOT SAME' END COMP FROM EMPLOYEES 

19. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF FIRST ALPHABET OF MONTH NAME IS 'M' 20%, IF SECOND ALPHABET IS 'E' 30%, IF THIRD CHARACTER IS 'N' 40%, NO INCREMENT TO OTHERS.
SELECT FIRST_NAME , SALARY , CASE WHEN SUBSTR(HIRE_DATE,'4',1) = 'M' THEN SALARY * 1.2 WHEN SUBSTR(HIRE_DATE,'5',1) = 'E' THEN SALARY * 1.3 WHEN SUBSTR(HIRE_DATE,'6',1) = 'N' THEN SALARY * 1.4 ELSE SALARY END COMP FROM EMPLOYEES;
	
20. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN FIRST WEEK OF MONTH 10%, 2nd WEEK 20% ... 5th WEEK 50%.
SELECT FIRST_NAME , SALARY , CASE WHEN TO_CHAR(HIRE_DATE,'W') = 1 THEN SALARY * 1.1 WHEN TO_CHAR(HIRE_DATE,'W') = 2 THEN SALARY * 1.2 WHEN TO_CHAR(HIRE_DATE,'W') = 3 THEN SALARY * 1.3 WHEN TO_CHAR(HIRE_DATE,'W') = 4 THEN SALARY * 1.4 ELSE SALARY * 1.5 END COMP FROM EMPLOYEES;   

21. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN FIRST SIX MONTHS OF YEAR 20% ELSE 30%.
SELECT FIRST_NAME , SALARY , CASE WHEN ROUND(HIRE_DATE,'YEAR') = TRUNC(HIRE_DATE,'YEAR') THEN SALARY * 1.2 ELSE SALARY * 1.3 END COMP FROM EMPLOYEES;

22. DISPLAY FIRST_NAME , SALARY , INCREMENTED SALARY. IF EMPLOYEE IS HIRED IN EVEN WEEK OF YEAR 20% OTHERWISE 10%.
SELECT FIRST_NAME , SALARY , CASE WHEN MOD(TO_CHAR(HIRE_DATE,'WW'),2) = 0 THEN SALARY * 1.2 ELSE SALARY * 1.1 END INCREMENT FROM EMPLOYEES;

23. DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF QUARTER ELSE 'SECOND'. (USING CASE)
SELECT FIRST_NAME , HIRE_DATE , CASE WHEN ROUND(HIRE_DATE,'Q') = TRUNC(HIRE_DATE,'Q') THEN 'FIRST' ELSE 'SECOND' END TEMP FROM EMPLOYEES;
